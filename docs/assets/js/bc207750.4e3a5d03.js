"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[90047],{31499:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>g,contentTitle:()=>c,default:()=>f,frontMatter:()=>k,metadata:()=>N,toc:()=>h});var a=n(3905),l=n(49044),r=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,s=(t,e,n)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,d=(t,e)=>{for(var n in e||(e={}))p.call(e,n)&&s(t,n,e[n]);if(m)for(var n of m(e))u.call(e,n)&&s(t,n,e[n]);return t};const k={id:"timescaleupdate",title:"TIMESCALE.UPDATE",hide_title:!0},c=void 0,N={unversionedId:"functions/connection/timescaleupdate",id:"functions/connection/timescaleupdate",title:"TIMESCALE.UPDATE",description:"TIMESCALE.UPDATE",source:"@site/streamsheets/functions/connection/timescaleupdate.md",sourceDirName:"functions/connection",slug:"/functions/connection/timescaleupdate",permalink:"/documentation-staging/streamsheets/next/functions/connection/timescaleupdate",draft:!1,tags:[],version:"current",frontMatter:{id:"timescaleupdate",title:"TIMESCALE.UPDATE",hide_title:!0},sidebar:"someSidebar",previous:{title:"TIMESCALE.SHOW_TABLES",permalink:"/documentation-staging/streamsheets/next/functions/connection/timescaleshow_tables"},next:{title:"WEBSOCKET.CONNECT",permalink:"/documentation-staging/streamsheets/next/functions/connection/websocketconnect"}},g={},h=[],b={toc:h};function f(t){var e,n=t,{components:r}=n,s=((t,e)=>{var n={};for(var a in t)p.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&m)for(var a of m(t))e.indexOf(a)<0&&u.call(t,a)&&(n[a]=t[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(e=d(d({},b),s),i(e,o({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h1",null,"TIMESCALE.UPDATE"),(0,a.kt)(l.Z,{mdxType:"PremiumFeature"}),(0,a.kt)("p",null,"Performs an UPDATE query on your timescale database.  "),(0,a.kt)("admonition",d({},{type:"info"}),(0,a.kt)("p",{parentName:"admonition"}," As of right now, the timescale functions work with the internal timescaledb. Leave the Connection parameter empty and the connection is automatically set up. We are working on allowing further timescale connections. ")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax")),(0,a.kt)("p",null,"=TIMESCALE.UPDATE(Connection, UpdateJSON)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Name"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Connection"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Connection"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Connection to use for querying. Leave this parameter empty. The internal timescaledb is automatically connected.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"UpdateJSON"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"JSON"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Defines a query using a JSON cell range, which contains all clauses to build the UPDATE query.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Type"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Boolean"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"TRUE, if successful.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null})),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"A"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"B"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"1"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"update"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"update")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"2"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"set"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),'"SensorA"=42, "SensorB"=23')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"3"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"where"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),'"SensorC" > 250')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"4"),(0,a.kt)("td",d({parentName:"tr"},{align:null})),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"5"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"update"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"update")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"6"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"set"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"7"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"0"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),'"SensorA"=42')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"8"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"1"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),'"SensorB"=23')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"9"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"where"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),'"SensorC" > 250')))),(0,a.kt)("p",null,'These are two ways to enter the update syntax. Either use one long string for the "set" command or divide the command in multiple rows.'),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Formula"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Result"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"Comment"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("pre",null,(0,a.kt)("code",null,"=TIMESCALE.UPDATE(, JSON(A1:B3))"))),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"TRUE"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Assuming passed JSON looks like ",(0,a.kt)("inlineCode",{parentName:"td"},"{ update: 'tableName', set: '\"SensorA\"=42', where: '\"SensorB\">50' }")," this will update column SensorA at all rows in which column SensorB has a value greater 50")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("pre",null,(0,a.kt)("code",null,"=TIMESCALE.UPDATE(, JSON(A5:B9))"))),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"TRUE"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Assuming passed JSON looks like ",(0,a.kt)("inlineCode",{parentName:"td"},"{ update: 'tableName', set: '\"SensorA\"=42', where: '\"SensorB\">50' }")," this will update column SensorA at all rows in which column SensorB has a value greater 50")))),(0,a.kt)("p",null,"For more examples see our ",(0,a.kt)("a",d({parentName:"p"},{href:"../../tutorials/tut-timescale"}),"timescale tutorial"),"."))}f.isMDXComponent=!0},49044:(t,e,n)=>{n.d(e,{Z:()=>o});var a=n(67294),l=n(74889),r=n(62659),i=n(83166);function o({}){return a.createElement(l.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:r.Z[500]},size:"small",icon:a.createElement(i.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);