"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[39699],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<r;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},36440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>d,default:()=>g,frontMatter:()=>m,metadata:()=>f,toc:()=>b});var o=n(3905),i=Object.defineProperty,r=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&p(e,n,t[n]);return e};const m={id:"mosquitto-man-pages",title:"Overview",sidebar_label:"Overview"},d=void 0,f={unversionedId:"broker/Mosquitto Manual/mosquitto-man-pages",id:"broker/Mosquitto Manual/mosquitto-man-pages",title:"Overview",description:"Name",source:"@site/mosquitto/broker/Mosquitto Manual/overview.md",sourceDirName:"broker/Mosquitto Manual",slug:"/broker/Mosquitto Manual/mosquitto-man-pages",permalink:"/documentation-staging/mosquitto/next/broker/Mosquitto Manual/mosquitto-man-pages",draft:!1,tags:[],version:"current",frontMatter:{id:"mosquitto-man-pages",title:"Overview",sidebar_label:"Overview"},sidebar:"someSidebar",previous:{title:"System Requirements",permalink:"/documentation-staging/mosquitto/next/broker/system-requirements"},next:{title:"Basic Configuration",permalink:"/documentation-staging/mosquitto/next/broker/Mosquitto Manual/mosquitto-configuration"}},k={},b=[{value:"Name",id:"name",level:2},{value:"Synopsis",id:"synopsis",level:2},{value:"Description\u200b",id:"description",level:2},{value:"Options",id:"options",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Files",id:"files",level:2},{value:"Platform limitations",id:"platform-limitations",level:2}],v={toc:b};function g(e){var t,n=e,{components:i}=n,p=((e,t)=>{var n={};for(var o in e)s.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&l)for(var o of l(e))t.indexOf(o)<0&&u.call(e,o)&&(n[o]=e[o]);return n})(n,["components"]);return(0,o.kt)("wrapper",(t=c(c({},v),p),r(t,a({components:i,mdxType:"MDXLayout"}))),(0,o.kt)("h2",c({},{id:"name"}),"Name"),(0,o.kt)("p",null,"Mosquitto - an MQTT broker"),(0,o.kt)("h2",c({},{id:"synopsis"}),"Synopsis"),(0,o.kt)("p",null,"mosquitto ","[-c config file][ -d | --daemon ]"," ","[-p port number][-v]"),(0,o.kt)("h2",c({},{id:"description"}),"Description\u200b"),(0,o.kt)("p",null,"Mosquitto is a broker for the MQTT protocol version 5.0/3.1.1/3.1."),(0,o.kt)("h2",c({},{id:"options"}),"Options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-c"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"--config-file"))),(0,o.kt)("p",null,"Load configuration from a file. If not given, then the broker will listen on port 1883 bound to the loopback interface, and the default values as described in mosquitto.conf(5) are used."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p"))),(0,o.kt)("p",null,"See the ",(0,o.kt)("inlineCode",{parentName:"p"},"-p")," option for a description of changes in behaviour from 1.6.x to 2.0."),(0,o.kt)("p",null,"In version 1.6.x and earlier, the listener defined by ",(0,o.kt)("inlineCode",{parentName:"p"},"-p")," (or the default port of 1883) would be bound to all interfaces and so be accessible from any network. It could also be used in combination with ",(0,o.kt)("inlineCode",{parentName:"p"},"-c"),"."),(0,o.kt)("p",null,"From version 2.0 onwards, the listeners defined with ",(0,o.kt)("inlineCode",{parentName:"p"},"-p")," are bound to the loopback interface only, and so can only be connected to from the local machine. If both ",(0,o.kt)("inlineCode",{parentName:"p"},"-p")," is used and a listener is defined in a configuration file, then the ",(0,o.kt)("inlineCode",{parentName:"p"},"-p")," options are IGNORED."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-d"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"--daemon"))),(0,o.kt)("p",null,"Run mosquitto in the background as a daemon. All other behaviour remains the same."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"--port"))),(0,o.kt)("p",null,"Listen on the port specified. May be specified up to 10 times to open multiple sockets listening on different ports."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-v"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"--verbose"))),(0,o.kt)("p",null,"Use verbose logging. This is equivalent to setting ",(0,o.kt)("inlineCode",{parentName:"p"},"log_type")," to all in the configuration file. This overrides and logging options given in the configuration file."),(0,o.kt)("h2",c({},{id:"configuration"}),"Configuration"),(0,o.kt)("p",null,"The broker can be configured using a configuration file as described in mosquitto.conf(5) and this is the main point of information for mosquitto. The files required for SSL/TLS support are described in mosquitto-tls(7)."),(0,o.kt)("h2",c({},{id:"files"}),"Files"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/etc/mosquitto/mosquitto.conf"))),(0,o.kt)("p",null,"Configuration file. See ","[Mosquitto Configuration]"," (NEW_mosquitto-configuration.md)."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/var/lib/mosquitto/mosquitto.db"))),(0,o.kt)("p",null,"Persistent message data storage location if persist enabled."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"autosave_interval seconds"))),(0,o.kt)("p",null,"The number of seconds that mosquitto will wait between each time it saves the in-memory database to disk. If set to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", the in-memory database will only be saved when mosquitto exits or when receiving the SIGUSR1 signal. Note that this setting only has an effect if persistence is enabled. Defaults to 1800 seconds (30 minutes)."),(0,o.kt)("p",null,"This option applies globally."),(0,o.kt)("p",null,"Reloaded on reload signal."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/etc/hosts.allow"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"/etc/hosts.deny"))),(0,o.kt)("p",null,"Host access control via tcp-wrappers as described in hosts_access(5)."),(0,o.kt)("h2",c({},{id:"platform-limitations"}),"Platform limitations"),(0,o.kt)("p",null,"Some versions of Windows have limitations on the number of concurrent connections due to the Windows API being used. In modern versions of Windows, e.g. Windows 10 or Windows Server 2019, this is approximately 8192 connections. In earlier versions of Windows, this limit is 2048 connections."))}g.isMDXComponent=!0}}]);