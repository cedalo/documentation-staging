"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[55299],{83166:(e,t,n)=>{var i=n(64836);t.Z=void 0;var a=i(n(64938)),o=n(85893),l=(0,a.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=l},13328:(e,t,n)=>{var i=n(64836);t.Z=void 0;var a=i(n(64938)),o=n(85893),l=(0,a.default)((0,o.jsx)("path",{d:"m23 12-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"}),"NewReleases");t.Z=l},52584:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>h,default:()=>v,frontMatter:()=>c,metadata:()=>k,toc:()=>N});var i=n(3905),a=n(78901),o=n(49044),l=Object.defineProperty,r=Object.defineProperties,p=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,g=(e,t)=>{for(var n in t||(t={}))d.call(t,n)&&m(e,n,t[n]);if(s)for(var n of s(t))u.call(t,n)&&m(e,n,t[n]);return e};const c={id:"mc-audit-trail",title:"Audit Trail \u2b50"},h=void 0,k={unversionedId:"mc-audit-trail",id:"mc-audit-trail",title:"Audit Trail \u2b50",description:"This page describes how to use the Audit Trail Feature which is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC).",source:"@site/management-center/audit-trail.md",sourceDirName:".",slug:"/mc-audit-trail",permalink:"/documentation-staging/management-center/next/mc-audit-trail",draft:!1,tags:[],version:"current",frontMatter:{id:"mc-audit-trail",title:"Audit Trail \u2b50"}},f={},N=[{value:"Audit Trail Overview",id:"audit-trail-overview",level:2},{value:"Enable Audit Trail Plugin",id:"enable-audit-trail-plugin",level:2},{value:"Audit Trail Functionality",id:"audit-trail-functionality",level:2},{value:"Log entries",id:"log-entries",level:2},{value:"Logger types",id:"logger-types",level:2},{value:"Config file",id:"config-file",level:2},{value:"Using filters",id:"using-filters",level:2},{value:"Configuring syslog",id:"configuring-syslog",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],y={toc:N};function v(e){var t,n=e,{components:l}=n,m=((e,t)=>{var n={};for(var i in e)d.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&s)for(var i of s(e))t.indexOf(i)<0&&u.call(e,i)&&(n[i]=e[i]);return n})(n,["components"]);return(0,i.kt)("wrapper",(t=g(g({},y),m),r(t,p({components:l,mdxType:"MDXLayout"}))),(0,i.kt)(a.Z,{version:"2.7",mdxType:"SinceVersion"}),(0,i.kt)(o.Z,{mdxType:"PremiumFeature"}),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("p",null,"This page describes how to use the ",(0,i.kt)("strong",{parentName:"p"},"Audit Trail Feature")," which is provided by the Management Center for the Pro Edition of Eclipse Mosquitto (MMC)."),(0,i.kt)("admonition",g({},{type:"info"}),(0,i.kt)("p",{parentName:"admonition"},"Audit Trail can only be set up on backend by changing configuration files")),(0,i.kt)("h2",g({},{id:"audit-trail-overview"}),"Audit Trail Overview"),(0,i.kt)("p",null,"This feature will log information about which user performed which action in the management center. The information can be logged to syslog, file, or console."),(0,i.kt)("admonition",g({},{type:"info"}),(0,i.kt)("p",{parentName:"admonition"},"MMC will not provide an API for querying the log information. It is up to the user to read the Audit Trail logs from syslog and integrate that information with other systems.")),(0,i.kt)("h2",g({},{id:"enable-audit-trail-plugin"}),"Enable Audit Trail Plugin"),(0,i.kt)("p",null,"To enable Audit Trail Feature you should make sure you are using Pro Edition of Mosquitto and that you have the feature enabled in your license. Also, ensure that your config file (specified with ",(0,i.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG")," environmental variable or by default saved in ",(0,i.kt)("inlineCode",{parentName:"p"},"management-center/config/config.json"),") contains the following entry inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins")," array:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'    {\n      "name": "audit-trail"\n    }\n')),(0,i.kt)("p",null,"On start-up, Management Center will print a message that ",(0,i.kt)("inlineCode",{parentName:"p"},"audit-trail")," plugin is enabled and loaded into the console:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{}),'Loaded plugin: "cedalo_audit_trail" (Cedalo Audit Trail)\n')),(0,i.kt)("h2",g({},{id:"audit-trail-functionality"}),"Audit Trail Functionality"),(0,i.kt)("p",null,"edit config file and good to go. it will log this and that"),(0,i.kt)("h2",g({},{id:"log-entries"}),"Log entries"),(0,i.kt)("p",null,"Each log entry contains the following information:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Timestamp"),": information on when the action was performed (timestamp in millisecond resolution)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"IP Address"),": information on from which IP address the action was initiated. Note: whether this information is part of the log entry or not can be configured via a configuration file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Hostname"),": the hostname of the broker to which the operation was sent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Port"),": the port of the broker to which the operation was sent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Username / Application Token"),": information on which user or which application (identified by the application token) performed the action."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Module name / plugin name"),": name of the module or plugin, where the action was performed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Operation name"),": the name of the operation that was performed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Operation parameters"),": the parameters passed to the operation that was performed.")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'{\n  "timestamp": 1675676434000,\n  "ipAddress": "127.0.0.1",\n  "hostname": "localhost",\n  "port": "8883",\n  "plugin": "dynamic-security",\n  "identifier": {\n    "username": "max", \n   // and/or "tokenName": "..."\n   // and/or "tokenHash": "..."\n  },\n  "operation": "createClient",\n  "params": {\n    "username": "max", \n    "clientid": "example-client",\n    "rolename": "admin",\n    "textname": "ExampleClient",\n    "textdescription": "Example client for testing"\n  }\n}\n')),(0,i.kt)("h2",g({},{id:"logger-types"}),"Logger types"),(0,i.kt)("p",null,"There are 3 types of loggers that can be specified in ",(0,i.kt)("inlineCode",{parentName:"p"},"audit.json")," file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"syslog"')," - saves all the logs into syslog as defined by ",(0,i.kt)("inlineCode",{parentName:"li"},"options")," property in ",(0,i.kt)("inlineCode",{parentName:"li"},"audit.json")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"file"')," - saves all the logs into a file as defined by ",(0,i.kt)("inlineCode",{parentName:"li"},"options")," property in ",(0,i.kt)("inlineCode",{parentName:"li"},"audit.json"),". It should hold ",(0,i.kt)("inlineCode",{parentName:"li"},"filename")," property with the path to a file"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"console"')," (default) - prints all the logs into stdout. Will be setup in case ",(0,i.kt)("inlineCode",{parentName:"li"},"logger")," property in ",(0,i.kt)("inlineCode",{parentName:"li"},"audit.json")," is not specified. When specifying this format you can leave ",(0,i.kt)("inlineCode",{parentName:"li"},"options")," property empty")),(0,i.kt)("p",null,"In order to specify a concrete logger type, put its typename into the ",(0,i.kt)("inlineCode",{parentName:"p"},"logger")," property of the ",(0,i.kt)("inlineCode",{parentName:"p"},"audit.json"),"."),(0,i.kt)("h2",g({},{id:"config-file"}),"Config file"),(0,i.kt)("p",null,"Config file ",(0,i.kt)("inlineCode",{parentName:"p"},"audit.json")," is by default stored in ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins/audit-trail")," directory but you can change the path and the file name by specifying\n",(0,i.kt)("inlineCode",{parentName:"p"},"CEDALO_MC_PROXY_CONFIG_AUDIT_TRAIL")," environment variable, which contains a path to Audit Trail configuration file."),(0,i.kt)("p",null,"An example of ",(0,i.kt)("inlineCode",{parentName:"p"},"audit.json")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'{\n    "logger": "syslog",\n    "options": {\n        "protocol": "unix",\n        "path": "/dev/log"\n    },\n    "loglevel": "debug",\n    "filters": [],\n    "operations": [\n        {\n            "plugin": "application-tokens",\n            "operation": "createAppToken",\n            "loglevel": "notice"\n        },\n        {\n            "plugin": "application-tokens",\n            "operation": "deleteAppToken",\n            "loglevel": "notice"\n        },\n        {\n            "plugin": "application-tokens",\n            "operation": "getAppToken",\n            "loglevel": "debug"\n        },\n        {\n            "plugin": "application-tokens",\n            "operation": "getAppTokens",\n            "loglevel": "debug"\n        },\n        {\n            "plugin": "cluster-management",\n            "operation": "checkClusterHealthStatus",\n            "loglevel": "notice"\n        }\n    ]\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"logger")," option contains either ",(0,i.kt)("inlineCode",{parentName:"p"},"syslog"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"file"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"console")," value.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"options")," property is specific to the logger type. It holds settings of the chosen logger. It is explained in more details below.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"loglevel")," - minimal level of sevirity which will be logged into ",(0,i.kt)("inlineCode",{parentName:"p"},"syslog"),". In other words, it logs actions of this ",(0,i.kt)("inlineCode",{parentName:"p"},"logLevel")," and higher. Possible values for this property are all the valid syslog levels (in the order of increasing severity: ",(0,i.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"notice"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"warning"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"err"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"crit"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"alert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"emerg"),")")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"filters")," - custom filters for operations of plugins. Explained in more detail below.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"operations")," - operations to be processed by the audit trail and logged. This is an array of elements of the form:"))),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'    "plugin": "...",\n    "operation": "...",\n    "loglevel": "..."\n')),(0,i.kt)("p",null,"where:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{}),"    * `plugin` - is the `featureId` of the plugin which holds action(s) that we want to log.\n    * `operation` - name of the operation to be logged\n    * `loglevel` - log level which the specified operations will have   \n")),(0,i.kt)("h1",g({},{id:"logger-options-for-syslog"}),"Logger options for syslog"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Local syslog (accessed through unix socket)"))),(0,i.kt)("p",null,"Options for this type may look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'    "options": {\n        "protocol": "unix",\n        "path": "/dev/log"\n    },\n')),(0,i.kt)("ol",g({},{start:2}),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Remote syslog (accessed through udp or tcp)"))),(0,i.kt)("p",null,"Options for this type may look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'    "options": {\n        "protocol": "unix",\n        "path": "/dev/log"\n    },\n')),(0,i.kt)("h2",g({},{id:"using-filters"}),"Using filters"),(0,i.kt)("p",null,"Filters are defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"filters")," property of ",(0,i.kt)("inlineCode",{parentName:"p"},"audit.json"),"."),(0,i.kt)("p",null,"Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'{ "type": "exclude", "plugin": "plugin*", "crud": "read", "loglevel": "warning" },\n')),(0,i.kt)("p",null,"Excludes (doesn't log) all read operation whose ",(0,i.kt)("inlineCode",{parentName:"p"},"featureId")," starts with ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin")," and whose loglevel is lower than ",(0,i.kt)("inlineCode",{parentName:"p"},"warning"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-json"}),'{ "type": "include", "plugin": "pluginA" },\n')),(0,i.kt)("p",null,"Includes all the actions from ",(0,i.kt)("inlineCode",{parentName:"p"},"pluginA")," into the logs."),(0,i.kt)("h2",g({},{id:"configuring-syslog"}),"Configuring syslog"),(0,i.kt)("p",null,"In order to properly configure syslog on n RedHat based distributions, go to ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/rsyslog.conf")," file and edit it. After that run ",(0,i.kt)("inlineCode",{parentName:"p"},"systemctl restart rsyslog")," in order to restart syslog deamon."),(0,i.kt)("p",null,"If you want to inspect syslog, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",g({parentName:"pre"},{className:"language-sh"}),"tail -f /var/log/messages\n")),(0,i.kt)("h2",g({},{id:"limitations"}),"Limitations"),(0,i.kt)("p",null,"In case of using syslog with ",(0,i.kt)("inlineCode",{parentName:"p"},"udp4"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"udp6"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"unix")," protocols, note that these are datagram udp based and are therefore fire-and-forget-like. This means that you will not get any error output in case you haven't properly configured Audit Trail plugin or your syslog"),(0,i.kt)("h2",g({},{id:"troubleshooting"}),"Troubleshooting"),(0,i.kt)("p",null,"If you are using remote syslog with udp protocol and it doesn't work, try switching to tcp for debugging perposes because the latter shows connection errors. After the problem has been solved, you can switch back."))}v.isMDXComponent=!0},49044:(e,t,n)=>{n.d(t,{Z:()=>r});var i=n(67294),a=n(74889),o=n(62659),l=n(83166);function r({inline:e}){return i.createElement(a.Z,{sx:{margin:e?"0px 5px":"5px",height:e?"22px":void 0,color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:i.createElement(l.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}},78901:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(67294),a=n(74889),o=n(13328);function l({version:e}){return e?i.createElement(a.Z,{sx:{margin:"5px"},color:"info",size:"small",icon:i.createElement(o.Z,{size:"small"}),label:`${e}`}):i.createElement(i.Fragment,null)}}}]);