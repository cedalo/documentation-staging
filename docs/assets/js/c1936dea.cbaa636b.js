"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[14151],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=i,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||o;return n?a.createElement(k,r(r({ref:t},u),{},{components:n})):a.createElement(k,r({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},69429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>N,frontMatter:()=>d,metadata:()=>k,toc:()=>f});var a=n(3905),i=Object.defineProperty,o=Object.defineProperties,r=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&u(e,n,t[n]);if(l)for(var n of l(t))p.call(t,n)&&u(e,n,t[n]);return e};const d={id:"release-notes",title:"Release Notes",sidebar_label:"Release Notes"},c=void 0,k={unversionedId:"release-notes",id:"release-notes",title:"Release Notes",description:"We will never stop improving Eclipse Mosquitto. Stay up to date with our release notes.",source:"@site/mosquitto/release-notes.md",sourceDirName:".",slug:"/release-notes",permalink:"/documentation-staging/mosquitto/next/release-notes",draft:!1,tags:[],version:"current",frontMatter:{id:"release-notes",title:"Release Notes",sidebar_label:"Release Notes"},sidebar:"someSidebar",previous:{title:"HA-Autoscaling Openshift",permalink:"/documentation-staging/mosquitto/next/openshift/high-availability-autoscaling-openshift"},next:{title:"Migration Information",permalink:"/documentation-staging/mosquitto/next/migration"}},h={},f=[{value:"Mosquitto MQTT Broker &amp; MMC 2.7",id:"mosquitto-mqtt-broker--mmc-27",level:2},{value:"Features",id:"features",level:3},{value:"Changes",id:"changes",level:3},{value:"How to Upgrade",id:"how-to-upgrade",level:3},{value:"Mosquitto MQTT Broker &amp; MMC 2.6",id:"mosquitto-mqtt-broker--mmc-26",level:2},{value:"Features",id:"features-1",level:3},{value:"Changes",id:"changes-1",level:3},{value:"How to Upgrade",id:"how-to-upgrade-1",level:3},{value:"Mosquitto MQTT Broker 2.0",id:"mosquitto-mqtt-broker-20",level:2},{value:"Broker features:",id:"broker-features",level:3},{value:"Broker fixes:",id:"broker-fixes",level:3}],g={toc:f};function N(e){var t,n=e,{components:i}=n,u=((e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&p.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=m(m({},g),u),o(t,r({components:i,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"We will never stop improving Eclipse Mosquitto. Stay up to date with our release notes."),(0,a.kt)("p",null,"If you have found any bugs or have feature requests, please submit these ",(0,a.kt)("a",m({parentName:"p"},{href:"https://github.com/eclipse/mosquitto/issues"}),"here"),"."),(0,a.kt)("h2",m({},{id:"mosquitto-mqtt-broker--mmc-27"}),"Mosquitto MQTT Broker & MMC 2.7"),(0,a.kt)("h3",m({},{id:"features"}),"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Kafka Bridge"),": The ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/broker/Mosquitto%20Manual/Bridges/mosquitto-kafka-bridge"}),"MQTT to Kafka bridge")," facilitates a unidirectional data transfer mechanism, enabling seamless MQTT data transmission from Pro Mosquitto to Kafka. The feature allows users to conveniently configure the MQTT to Kafka topics mapping, with Pro Mosquitto ensuring the automatic data transfer from the chosen MQTT topics to the specified Kafka destinations. The MQTT to Kafka bridge allows to:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Specify the Kafka server"),(0,a.kt)("li",{parentName:"ul"},"Choose the authentication method"),(0,a.kt)("li",{parentName:"ul"},"Select which topics to publish"),(0,a.kt)("li",{parentName:"ul"},"Map MQTT topics to Kafka topics"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"MongoDB Bridge"),": The ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/broker/Mosquitto%20Manual/Bridges/mosquitto-mongodb-bridge"}),"MongoDB Bridge")," enables one-way data transfer from MQTT to MongoDB. It's built for effortless data migration, allowing users to handle MQTT-generated data in MongoDB efficiently. The MQTT to MongoDB bridge allows to:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Specify the database and collection to import to"),(0,a.kt)("li",{parentName:"ul"},"Choose the authentication method"),(0,a.kt)("li",{parentName:"ul"},"Select which topics and message fields to import"),(0,a.kt)("li",{parentName:"ul"},"Map topics to specific collections"),(0,a.kt)("li",{parentName:"ul"},"Choose which fields to insert into collections"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Kubernetes Support"),":  ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/kubernetes/introduction"}),"Kubernetes"),"] container deployment support enables users to install and run Pro Mosquitto within Kubernetes.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Audit Trails"),":  The ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/broker/Mosquitto%20Manual/mosquitto-audit-trail"}),"Audit Trails feature")," provides a detailed record of every significant action, creating an append-only log, bot for Mosquitto and ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/management-center/overview/mc-audit-trail"}),"MMC"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Prometheus Exporter"),": Pro Mosquitto now implements a ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/broker/Mosquitto%20Manual/mosquitto-metrics-exporter"}),"Prometheus exporter"),", allowing Prometheus to query Pro Mosquitto for metrics to be monitored directly. The metrics set gives a broad overview of what is happening on your broker, from the number of clients connected to the count of individual MQTT message types sent and received.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Sparkplug Awareness"),": Mosquitto 2.7 (Pro & OS) implements the full functionality of a ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/broker/Mosquitto%20Manual/mosquitto-sparkplug-aware"}),"Sparkplug Aware Broker"),", aligning seamlessly with the requirements outlined in the official Sparkplug specification.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Configurable Leader Election"),": The Configurable Leader Election gives users complete control over the leader selection process within an HA cluster. Users can now define which specific node in the cluster should act as the leader. This setting ensures that the most suitable node seamlessly takes over the leader role. It is an addition to the current HA MQTT API."))),(0,a.kt)("h3",m({},{id:"changes"}),"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Cluster Management UI"),": In the connections tab, icons are now used to distinguish leaders and followers within an HA cluster.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Small Bug Fixes for the MMC and Mosquitto."))),(0,a.kt)("h3",m({},{id:"how-to-upgrade"}),"How to Upgrade"),(0,a.kt)("p",null,"To upgrade adjust your ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," file and the config files as described ",(0,a.kt)("a",m({parentName:"p"},{href:"/documentation-staging/mosquitto/next/migration"}),"here"),".\nDownload the new images via a ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose pull")," and start up again."),(0,a.kt)("h2",m({},{id:"mosquitto-mqtt-broker--mmc-26"}),"Mosquitto MQTT Broker & MMC 2.6"),(0,a.kt)("h3",m({},{id:"features-1"}),"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Client certificate authority management: The MMC is now able to store client certificate authorities and deploy them on all connected broker supporting the respective MQTT API endpoints. This allows the MMC to be the central unit around uploading and organizing client certificate authorities. This is the first step forward on supporting UI support for client certificate management. This feature will be further expanded in a future release.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Client Inspect: We have extended the client inspect plugin information. Now it is possible to check queue sizes (only important for QoS 1 & 2) and directly disconnect a client via the UI.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"HA Cluster: Added new mode. The new Dynamic Security Synchronisation Cluster Mode provides a different type of HA cluster that synchronises the Dynamic Security authentication and authorisation settings throughout the cluster. Each node in the cluster is active and available for clients to connect to, but there is no inter-node MQTT communication."))),(0,a.kt)("h3",m({},{id:"changes-1"}),"Changes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"General UI changes: The whole MMC has gotten a face-lift. All pages have been reworked to fit in the new UI.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Sidebar: The sidebar was rearranged to visually separate broker specific and global options. Broker specific pages can be found on the top and other are can be found at the bottom of the navigation bar.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Status Page: Is now called "Home" and went through a face-lift. A chart was added showing the currently connected clients and the maximum allowed client connections.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Breaking: Changed the "themes" structure in the config.json of the Management Center.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Bug Fixes")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Added a new way of loading MMC plugins. The file "plugins.json" can now be used to manually configure the plugins. The config.json loads the content of the file on start if the environment variable "CEDALO_MC_PLUGIN_LIST_PATH: management-center/config/plugins.json" is set. If no file is found an error message is shown and the config.json file will be read. If the file is found, the config.json file plugin list will be overwritten on start. The plugin.json file is only readable not writable by the MMC.'))),(0,a.kt)("h3",m({},{id:"how-to-upgrade-1"}),"How to Upgrade"),(0,a.kt)("p",null,"To upgrade adjust your ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," file and the config files as described here.\nDownload the new images via a ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose pull")," and start up again."),(0,a.kt)("h2",m({},{id:"mosquitto-mqtt-broker-20"}),"Mosquitto MQTT Broker 2.0"),(0,a.kt)("h3",m({},{id:"broker-features"}),"Broker features:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"New plugin interface which is more flexible, easier to develop for and easier to extend.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"New dynamic security plugin, which allows clients, groups, and roles to be defined and updated as the broker is running.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Performance improvements, particularly for higher numbers of clients.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'When running as root, if dropping privileges to the "mosquitto" user fails, then try "nobody" instead. This reduces the burden on users installing Mosquitto themselves.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add support for Unix domain socket listeners.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge_outgoing_retain")," option, to allow outgoing messages from a bridge to have the retain bit completely disabled, which is useful when bridging to e.g. Amazon or Google.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Add support for MQTT v5 bridges to handle the "retain-available" property being false.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Allow MQTT v5.0 outgoing bridges to fall back to MQTT v3.1.1 if connecting to a v3.x only broker.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"DLT logging is now configurable at runtime with ",(0,a.kt)("inlineCode",{parentName:"p"},"log_dest")," dlt. Closes #1735.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_plugin_publish()")," function, which can be used by plugins to publish messages.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_client_protocol_version()")," function which can be used by plugins to determine which version of MQTT a client has connected with.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_kick_client_by_clientid()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_kick_client_by_username()")," functions, which can be used by plugins to disconnect clients.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add support for handling ",(0,a.kt)("inlineCode",{parentName:"p"},"$CONTROL/")," topics in plugins.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add support for ",(0,a.kt)("inlineCode",{parentName:"p"},"PBKDF2-SHA512")," password hashing.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Enabling certificate based TLS encryption is now through ",(0,a.kt)("inlineCode",{parentName:"p"},"certfile")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"keyfile"),", not ",(0,a.kt)("inlineCode",{parentName:"p"},"capath")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"cafile"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Added support for controlling ",(0,a.kt)("inlineCode",{parentName:"p"},"UNSUBSCRIBE")," calls in v5 plugin ACL checks.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Add "deny" acl type. Closes #1611.')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The broker now sends the receive-maximum property for MQTT v5 CONNACKs.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add the ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge_max_packet_size")," option. Closes #265.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add the ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge_bind_address")," option. Closes #1311.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"TLS certificates for the server are now reloaded on ",(0,a.kt)("inlineCode",{parentName:"p"},"SIGHUP"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Default for ",(0,a.kt)("inlineCode",{parentName:"p"},"max_queued_messages")," has been changed to 1000.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"ciphers_tls1.3")," option, to allow setting TLS v1.3 ciphersuites. Closes #1825.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Bridges now obey MQTT v5 ",(0,a.kt)("inlineCode",{parentName:"p"},"server-keepalive"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add bridge support for the MQTT v5 ",(0,a.kt)("inlineCode",{parentName:"p"},"maximum-qos")," property.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Log client port on new connections. Closes #1911."))),(0,a.kt)("h3",m({},{id:"broker-fixes"}),"Broker fixes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Send ",(0,a.kt)("inlineCode",{parentName:"p"},"DISCONNECT")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"malformed-packet")," reason code on invalid ",(0,a.kt)("inlineCode",{parentName:"p"},"PUBLISH"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"SUBSCRIBE"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"UNSUBSCRIBE")," packets.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Document that ",(0,a.kt)("inlineCode",{parentName:"p"},"X509_free()")," must be called after using ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_client_certificate()"),". Closes #1842.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fix listener not being reassociated with client when reloading a persistence file and ",(0,a.kt)("inlineCode",{parentName:"p"},"per_listener_settings")," true is set and the client did not set a username. Closes #1891.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fix bridge sock not being removed from sock hash on error. Closes #1897. ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_password")," now forbids the ",(0,a.kt)("inlineCode",{parentName:"p"},":")," character. Closes #1833.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fix ",(0,a.kt)("inlineCode",{parentName:"p"},"log_timestamp_format")," not applying to ",(0,a.kt)("inlineCode",{parentName:"p"},"log_dest")," topic. Closes #1862.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fix crash on Windows if loading a plugin fails. Closes #1866.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fix file logging on Windows. Closes #1880.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Report an error if the config file is set to a directory. Closes #1814.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Fix bridges incorrectly setting Wills to manage remote notifications when ",(0,a.kt)("inlineCode",{parentName:"p"},"notifications_local_only")," was set true. Closes #1902."))))}N.isMDXComponent=!0}}]);