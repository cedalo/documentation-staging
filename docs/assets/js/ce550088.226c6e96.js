"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[25588],{83166:(e,t,n)=>{var a=n(64836);t.Z=void 0;var i=a(n(64938)),o=n(85893),r=(0,i.default)((0,o.jsx)("path",{d:"M12 2 4 5v6.09c0 5.05 3.41 9.76 8 10.91 4.59-1.15 8-5.86 8-10.91V5l-8-3zm-1.06 13.54L7.4 12l1.41-1.41 2.12 2.12 4.24-4.24 1.41 1.41-5.64 5.66z"}),"GppGood");t.Z=r},82704:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>f,default:()=>y,frontMatter:()=>p,metadata:()=>h,toc:()=>b});var a=n(3905),i=n(49044),o=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&m(e,n,t[n]);if(c)for(var n of c(t))u.call(t,n)&&m(e,n,t[n]);return e};const p={id:"mosquitto-certificate-management",title:"Mosquitto Client Certificate Authoritiy Management",sidebar_label:"Mosquitto Client CA Management"},f=void 0,h={unversionedId:"broker/Mosquitto Manual/mosquitto-certificate-management",id:"broker/Mosquitto Manual/mosquitto-certificate-management",title:"Mosquitto Client Certificate Authoritiy Management",description:"There are multiple ways of authenticating clients. The most common way is using the dynamic-security plugin and creating client accounts with a username password approach. An added security layer for authentication is the usage of client certificates. These can be used in addition or as an alternative to the username password authentication.",source:"@site/mosquitto/broker/Mosquitto Manual/certificate-management.md",sourceDirName:"broker/Mosquitto Manual",slug:"/broker/Mosquitto Manual/mosquitto-certificate-management",permalink:"/documentation-staging/mosquitto/next/broker/Mosquitto Manual/mosquitto-certificate-management",draft:!1,tags:[],version:"current",frontMatter:{id:"mosquitto-certificate-management",title:"Mosquitto Client Certificate Authoritiy Management",sidebar_label:"Mosquitto Client CA Management"},sidebar:"someSidebar",previous:{title:"Streams",permalink:"/documentation-staging/mosquitto/next/broker/Mosquitto Manual/mosquitto-streams"},next:{title:"High Availability",permalink:"/documentation-staging/mosquitto/next/broker/mosquitto-high-availability"}},g={},b=[{value:"Plugin configuration",id:"plugin-configuration",level:2}],k={toc:b};function y(e){var t,n=e,{components:o}=n,m=((e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&c)for(var a of c(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=d(d({},k),m),r(t,l({components:o,mdxType:"MDXLayout"}))),(0,a.kt)(i.Z,{mdxType:"PremiumFeature"}),(0,a.kt)("p",null,"There are multiple ways of authenticating clients. The most common way is using the ",(0,a.kt)("a",d({parentName:"p"},{href:"/documentation-staging/mosquitto/next/broker/Mosquitto%20Manual/broker-dynamic-security"}),"dynamic-security plugin")," and creating client accounts with a username password approach. An added security layer for authentication is the usage of client certificates. These can be used in addition or as an alternative to the username password authentication. "),(0,a.kt)("p",null,"Client certificates are a digital certificate, which is used by a connecting client to authenticate at a server. The server approves a connection, if the certificate can be validated by a stored client certificate authority. This setting is configured in the ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," file. To allow a deployment of CAs via another entity, this plugin provides a Mosquitto control API which manages CA certificates for\ncertificate based authentication/validation."),(0,a.kt)("p",null,"The topic of the plugins control API is ",(0,a.kt)("inlineCode",{parentName:"p"},"$CONTROL/certificate-management/v1"),".\nCurrently supported commands offered by the API are ",(0,a.kt)("inlineCode",{parentName:"p"},"insertCACertificate"),", which\ncan be used to extend the existing Certificate Authority (CA) Chain or just the\nRoot CA by an additional signing/validating certificate. To get rid of a\npreviously added CA cert, the ",(0,a.kt)("inlineCode",{parentName:"p"},"deleteCACertificate")," command can be used."),(0,a.kt)("h2",d({},{id:"plugin-configuration"}),"Plugin configuration"),(0,a.kt)("p",null,"To enable the plugin it must be loaded into the broker with, by adding the\nfollowing to your ",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto.conf"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-aconf"}),"plugin /usr/lib/cedalo_certificate_management.so\n")),(0,a.kt)("p",null,"In addition to enable the brokers internal ",(0,a.kt)("inlineCode",{parentName:"p"},"$CONTROL/broker/v1")," API we need to\nadd:"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-aconf"}),"enable_control_api true\n")),(0,a.kt)("p",null,"This is required to determine the listeners identifier, where the changes should\nbe applied to."),(0,a.kt)("p",null,"A sample broker configuration could look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-aconf"}),"listener 1883 127.0.0.1 # listener 1 to manage the CA certificates (local connection only)\n\nlistener 8883 # listener 2 to be managed, accepting the client connections\ncertfile server.crt\nkeyfile server.key\ncapath ca_path\nrequire_certificate true\n\nallow_anonymous true\nenable_control_api true\n\nplugin /usr/lib/cedalo_certificate_management.so\n")),(0,a.kt)("p",null,"The path of the ",(0,a.kt)("inlineCode",{parentName:"p"},"capath")," configuration should contain at least a root CA cert."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Note:"))," The ",(0,a.kt)("inlineCode",{parentName:"p"},"cafile")," configuration with a single PEM file containing the CA\nchain is currently not supported for this command."),(0,a.kt)("p",null,"To add a new CA certificate to the running broker instance you can either use\n",(0,a.kt)("inlineCode",{parentName:"p"},"mosquitto_ctrl")," or initiate a request-response API call, which is described\nbelow."),(0,a.kt)("p",null,"To learn more about the API check out our API documentation.\nIf you are not into APIs and are looking for a UI to handle this functionality, you can use the MMC to upload and deploy CAs."))}y.isMDXComponent=!0},49044:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),i=n(74889),o=n(62659),r=n(83166);function l({}){return a.createElement(i.Z,{sx:{margin:"5px",color:"#ffffff",backgroundColor:o.Z[500]},size:"small",icon:a.createElement(r.Z,{style:{color:"white"},size:"small"}),label:"Premium"})}}}]);