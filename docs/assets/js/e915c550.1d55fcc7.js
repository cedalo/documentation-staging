"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[59920],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),u=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return r.createElement(s.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,s=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),c=u(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(f,o(o({ref:e},p),{},{components:n})):r.createElement(f,o({ref:e},p))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},73398:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>g,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>f,toc:()=>k});var r=n(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(t,e,n)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,m=(t,e)=>{for(var n in e||(e={}))s.call(e,n)&&p(t,n,e[n]);if(i)for(var n of i(e))u.call(e,n)&&p(t,n,e[n]);return t};const c={id:"outboxdata",title:"OUTBOXDATA",hide_title:!0},d=void 0,f={unversionedId:"functions/streamsheet/outboxdata",id:"version-3.0/functions/streamsheet/outboxdata",title:"OUTBOXDATA",description:"OUTBOXDATA",source:"@site/streamsheets_versioned_docs/version-3.0/functions/streamsheet/outboxdata.md",sourceDirName:"functions/streamsheet",slug:"/functions/streamsheet/outboxdata",permalink:"/documentation-staging/streamsheets/3.0/functions/streamsheet/outboxdata",draft:!1,tags:[],version:"3.0",frontMatter:{id:"outboxdata",title:"OUTBOXDATA",hide_title:!0},sidebar:"someSidebar",previous:{title:"OUTBOX",permalink:"/documentation-staging/streamsheets/3.0/functions/streamsheet/outbox"},next:{title:"OUTBOXIDS",permalink:"/documentation-staging/streamsheets/3.0/functions/streamsheet/outboxids"}},g={},k=[],b={toc:k};function h(t){var e,a=t,{components:p}=a,c=((t,e)=>{var n={};for(var r in t)s.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&i)for(var r of i(t))e.indexOf(r)<0&&u.call(t,r)&&(n[r]=t[r]);return n})(a,["components"]);return(0,r.kt)("wrapper",(e=m(m({},b),c),l(e,o({components:p,mdxType:"MDXLayout"}))),(0,r.kt)("h1",null,"OUTBOXDATA"),(0,r.kt)("p",null,"Creates a JSON key from the given values or range to reference data from within a message. This function is normally used in the WRITE function. OUTBOXDATA references values from the Data section of a message."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("p",null,"=OUTBOXDATA(Message, ValuesOrRange)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Name"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),"Message"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"String"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"Message to reference data from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),"ValuesOrRange"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"Values or Range"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"A list of values or a range of cells describing the path to the element path within a JSON structure.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Type"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),"String"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"A string key to provide a path within a message.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Formula"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Result"),(0,r.kt)("th",m({parentName:"tr"},{align:null}),"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"=OUTBOXDATA(\u201cMessage, \u201cNewItem\u201d)"))),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"[Message][Newitem]"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"Returns an identifier that can be used in other Streamsheet functions like WRITE.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"=OUTBOXDATA(\u201cMessage\u201d, B1:B2)"))),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"[Message][Customer]","[Name]"),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"The WRITE function returns the last part of the JSON Path. The value in C7 will be written into the Message at the given JSON Path.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",m({parentName:"tr"},{align:null}),(0,r.kt)("pre",null,(0,r.kt)("code",null,"=WRITE(OUTBOXDATA(\u201cMessage\u201d, \u201dOutput\u201d,-1),JSON(J22:K24),)"))),(0,r.kt)("td",m({parentName:"tr"},{align:null}),"Pro tip: If you want to create an array in the Outbox, use -1 as the last OUTBOXDATA() parameter. This way the array will automatically increment starting from 0."),(0,r.kt)("td",m({parentName:"tr"},{align:null}),(0,r.kt)("br",null)," ",(0,r.kt)("img",{src:n(59097).Z,width:"80%"}))))))}h.isMDXComponent=!0},59097:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/increment-5fea2d4e3172ebb2da8f9f9f27ed548e.png"}}]);