"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[81319],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=r,g=m["".concat(p,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(g,o(o({ref:t},s),{},{components:n})):a.createElement(g,o({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},48589:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>k,frontMatter:()=>m,metadata:()=>g,toc:()=>b});var a=n(3905),r=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,s=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&s(e,n,t[n]);if(l)for(var n of l(t))d.call(t,n)&&s(e,n,t[n]);return e};const m={id:"mqttapi-bridges-index",title:"MQTT API for Bridges",sidebar_label:"Bridges"},u=void 0,g={unversionedId:"api/mqttapis/mqttapi-bridges-index",id:"api/mqttapis/mqttapi-bridges-index",title:"MQTT API for Bridges",description:"Control topic",source:"@site/mosquitto/api/mqttapis/mqttapi-bridges-index.md",sourceDirName:"api/mqttapis",slug:"/api/mqttapis/mqttapi-bridges-index",permalink:"/documentation-staging/mosquitto/next/api/mqttapis/mqttapi-bridges-index",draft:!1,tags:[],version:"current",frontMatter:{id:"mqttapi-bridges-index",title:"MQTT API for Bridges",sidebar_label:"Bridges"},sidebar:"someSidebar",previous:{title:"MQTT API Overview",permalink:"/documentation-staging/mosquitto/next/api/api-overview"},next:{title:"Azure Bridge",permalink:"/documentation-staging/mosquitto/next/api/mqttapis/azure-bridge"}},f={},b=[{value:"Control topic",id:"control-topic",level:2},{value:"getConfig",id:"getconfig",level:3},{value:"updateConfig",id:"updateconfig",level:3},{value:"getSchema",id:"getschema",level:3}],h={toc:b};function k(e){var t,n=e,{components:r}=n,s=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&d.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=c(c({},h),s),i(t,o({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h2",c({},{id:"control-topic"}),"Control topic"),(0,a.kt)("p",null,"The plugins can be controlled by sending command messages to a topic. Responses are also published to the topic followed by ",(0,a.kt)("inlineCode",{parentName:"p"},"/response"),".\nThe topic depends on the bridge, you are trying to configure or request infos about:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Bridge"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Topic"),(0,a.kt)("th",c({parentName:"tr"},{align:null}),"Response Topic"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"Azure Bridge"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"$CONTROL/cedalo/azure-eventhubs-bridge/v1")),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"$CONTROL/cedalo/azure-eventhubs-bridge/v1/response"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"Influx DB Bridge"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"$CONTROL/cedalo/influxdb-bridge/v1")),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"$CONTROL/cedalo/influx-db/v1/response"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",c({parentName:"tr"},{align:null}),"Mongo DB Bridge"),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"$CONTROL/cedalo/mongodb-bridge/v1")),(0,a.kt)("td",c({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"$CONTROL/cedalo/mongo-db/v1/response"))))),(0,a.kt)("p",null,"The following commands are currently available:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getSchema")," to get the schemata used to validate the config JSON"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getConfig")," to fetch current config as a JSON object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"updateConfig")," to update the complete configuration of the Azure EventHubs Bridge"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"getStatus")," to fetch information about current bridge status")),(0,a.kt)("p",null,"Each control message has the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "commands": [\n        {\n            "command": <A known control api command>,\n            "correlationData": <Optional UUID to identify sender. If specified it is passed with response.>,\n            "configChange": <Valid config JSON object>\n        }\n    ]\n}\n')),(0,a.kt)("h3",c({},{id:"getconfig"}),"getConfig"),(0,a.kt)("p",null,"For example to fetch the current config send a ",(0,a.kt)("inlineCode",{parentName:"p"},"getConfig")," command:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "commands": [\n        {\n            "command": "getConfig",\n            "correlationData": "1234"\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"The response depends on the type of bridge."),(0,a.kt)("h3",c({},{id:"updateconfig"}),"updateConfig"),(0,a.kt)("p",null,"And to update it use the ",(0,a.kt)("inlineCode",{parentName:"p"},"updateConfig")," command. The content of the ",(0,a.kt)("inlineCode",{parentName:"p"},"configChange")," depends on the bridge, you\nare trying to configure and is explained in detail in the specific bridge explanation below the ",(0,a.kt)("a",c({parentName:"p"},{href:"../../bridges/bridges-index"}),"Bridges Section"),". In the examole\nbelow, the Azure Eventhub Bridge in configured."),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n    "commands": [\n        {\n            "command": "updateConfig",\n            "correlationData": "12345",\n            "configChange": {\n                "eventhubs": [\n                    {\n                        "name": "EvHub1",\n                        "auth": {\n                            "sas": {\n                                "key": "A_SAS_Key_Token"\n                            }\n                        }\n                    }\n                ],\n                "producers": [\n                    {\n                        "name": "P1",\n                        "hub": "hub1",\n                        "eventhub": "EvHub1",\n                        "options": {\n                            "messageId": "{NOW_ISO}"\n                        }\n                    }\n                ],\n                "topicMappings": [\n                    {\n                        "source": "test/topic",\n                        "target": "P1"\n                    }\n                ]\n            }\n        }\n    ]\n}\n')),(0,a.kt)("h3",c({},{id:"getschema"}),"getSchema"),(0,a.kt)("p",null,"Example of ",(0,a.kt)("inlineCode",{parentName:"p"},"getSchema"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "commands": [\n    {\n      "command": "getSchema",\n      "correlationData": "1234"\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"The response depends on the type of bridge and is explained in detail in the specific bridge explanation below the ",(0,a.kt)("a",c({parentName:"p"},{href:"../../bridges/bridges-index"}),"Bridges Section")),(0,a.kt)("p",null,"Example of ",(0,a.kt)("inlineCode",{parentName:"p"},"getStatus"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "commands": [\n    {\n      "command": "getStatus",\n      "correlationData": "1234"\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"The response depends on the type of bridge and is explained in detail in the specific bridge explanation below the ",(0,a.kt)("a",c({parentName:"p"},{href:"../../bridges/bridges-index"}),"Bridges Section")))}k.isMDXComponent=!0}}]);