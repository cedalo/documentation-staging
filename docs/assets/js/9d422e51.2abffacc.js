"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[59731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,b=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(b,i(i({ref:t},p),{},{components:n})):a.createElement(b,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},91007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>d,default:()=>h,frontMatter:()=>m,metadata:()=>b,toc:()=>y});var a=n(3905),o=Object.defineProperty,r=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(s)for(var n of s(t))l.call(t,n)&&p(e,n,t[n]);return e};const m={id:"mqtt-topics",title:"Topics",sidebar_label:"Topics"},d=void 0,b={unversionedId:"MQTT/mqtt-topics",id:"MQTT/mqtt-topics",title:"Topics",description:"Messages in MQTT are published to topics. A topic is a string that that acts as an identifier for messages to be",source:"@site/mosquitto/MQTT/topics.md",sourceDirName:"MQTT",slug:"/MQTT/mqtt-topics",permalink:"/documentation-staging/mosquitto/next/MQTT/mqtt-topics",draft:!1,tags:[],version:"current",frontMatter:{id:"mqtt-topics",title:"Topics",sidebar_label:"Topics"},sidebar:"someSidebar",previous:{title:"Clients",permalink:"/documentation-staging/mosquitto/next/MQTT/mqtt-clients"},next:{title:"Glossary",permalink:"/documentation-staging/mosquitto/next/MQTT/mqtt-glossary"}},f={},y=[],g={toc:y};function h(e){var t,n=e,{components:o}=n,p=((e,t)=>{var n={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&l.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=u(u({},g),p),r(t,i({components:o,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"Messages in MQTT are published to topics. A topic is a string that that acts as an identifier for messages to be\npublished to or subscribed from. There is no need to configure a topic, publishing on it automatically creates a topic, you can\nsubscribe on."),(0,a.kt)("p",null,"Topics are treated as a hierarchy, using a slash (/) as a separator. This allows an arrangement of common themes to be\ncreated, much in the same way as a file system. This way you can group or organize your data to be published."),(0,a.kt)("p",null,"Valid examples for grouped topics could be:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Company/Location/MachineA/Speed"),(0,a.kt)("li",{parentName:"ul"},"Company/Location/MachineB/Speed"),(0,a.kt)("li",{parentName:"ul"},"Company/Location/MachineC/Speed"),(0,a.kt)("li",{parentName:"ul"},"Company/Location/MachineC/Temp")),(0,a.kt)("p",null,'Topics can contain spaces and are case-sensitive. Topics must use UTF8 coding. Zero length topic levels are valid, which\ncan lead to some slightly non-obvious behaviour. For example, a topic of "\na//topic" would correctly match against a subscription of "a/+/topic". Likewise, zero length topic levels can exist at\nboth the beginning and the end of a topic string, so "/a/topic" would match against a subscription of "+/a/topic", "#"\nor "/#", and a topic "a/topic/" would match against a subscription of "a/topic/+" or "a/topic/#".'),(0,a.kt)("p",null,"Clients can receive messages by creating subscriptions. A subscription may be to an explicit topic, in which case only\nmessages to that topic will be received, or it may include wildcards. Two wildcards are available, + or #."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"'+' can be used as a wildcard for a single level of hierarchy. For the above topics using Company/Location/+/Speed\nwould subscribe to all machines messages related to Speed."),(0,a.kt)("li",{parentName:"ul"},"'#' can be used as a wildcard for all remaining levels of a hierarchy. For the above topics using\nCompany/Location/MachineC/# would subscribe to all messages for MachineC.")))}h.isMDXComponent=!0}}]);