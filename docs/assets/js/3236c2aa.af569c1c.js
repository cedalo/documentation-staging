"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[60768],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>d});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(o),d=r,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return o?n.createElement(f,l(l({ref:t},u),{},{components:o})):n.createElement(f,l({ref:t},u))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=o[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},99011:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>b,frontMatter:()=>m,metadata:()=>f,toc:()=>y});var n=o(3905),r=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,o)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,c=(e,t)=>{for(var o in t||(t={}))s.call(t,o)&&u(e,o,t[o]);if(i)for(var o of i(t))p.call(t,o)&&u(e,o,t[o]);return e};const m={id:"tut-loop",title:"Payload Looping",sidebar_label:"Loop"},d=void 0,f={unversionedId:"tutorials/tut-loop",id:"version-3.0/tutorials/tut-loop",title:"Payload Looping",description:"Looping inbox payloads allows looking at payload elements individually.",source:"@site/streamsheets_versioned_docs/version-3.0/tutorials/loop.md",sourceDirName:"tutorials",slug:"/tutorials/tut-loop",permalink:"/documentation-staging/streamsheets/3.0/tutorials/tut-loop",draft:!1,tags:[],version:"3.0",frontMatter:{id:"tut-loop",title:"Payload Looping",sidebar_label:"Loop"},sidebar:"someSidebar",previous:{title:"JSON Range",permalink:"/documentation-staging/streamsheets/3.0/tutorials/tut-json"},next:{title:"Timeseries Functions",permalink:"/documentation-staging/streamsheets/3.0/tutorials/timeseries"}},h={},y=[{value:"Inbox Loop",id:"inbox-loop",level:2}],g={toc:y};function b(e){var t,r=e,{components:u}=r,m=((e,t)=>{var o={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&p.call(e,n)&&(o[n]=e[n]);return o})(r,["components"]);return(0,n.kt)("wrapper",(t=c(c({},g),m),a(t,l({components:u,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Looping inbox payloads allows looking at payload elements individually. "),(0,n.kt)("h2",c({},{id:"inbox-loop"}),"Inbox Loop"),(0,n.kt)("p",null,'Inbox messages can consist out of different objects. There are the regular parameters like boolean, number or string elements, which are holding the actual information, and there are structural elements like "dictionaries" and "arrays". The structural elements are ordering the information in different hierarchies. While "dictionaries" only serve as folder elements to organize message data in different levels, "arrays" usually follow a certain style and represent an ordered list of values.\nThey repeat the same form for a certain amount of time. For example, if a message should hold different information for the same parameters an array would be the perfect choice. '),(0,n.kt)("p",null,"Simple example:\nYou could structure multiple sensor information from the same parameter in one message. Let's say you have three sensors, who all measure temperature: Sensor 1 measured 10\xb0C, Sensor 2 measured 20\xb0C and Sensor 3 measured 12\xb0C."),(0,n.kt)("p",null,"A JSON object capturing this information would look like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),'[    {\n"sensor_id":"S1",\n"temp":10\n},\n{\n"sensor_id":"S2",\n"temp":20\n},\n{\n"sensor_id":"S3",\n"temp":12\n}    ]\n')),(0,n.kt)("p",null,"In a Streamsheet Inbox this would look like this:"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"JSON Array in Streamsheets")),(0,n.kt)("p",null,"In Streamsheets, it is now possible to loop these arrays. When looping an array, every array object gets treated as part of a single message. Usually, one message takes one step to be processed. Adding a loop to our example message would now result in three steps. Streamsheets would read only one of the three information blocks in every step.\nThere are two main reasons why this seems practical. "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The array is filled with messages you want to process one after another."),(0,n.kt)("li",{parentName:"ol"},"The array varies in size, and you never know how big an array could get. So adding simple READ() functions does not cut it. ")),(0,n.kt)("p",null,'Adding a loop element is quit simple. Wait for one message to arrive in the inbox, right-click on the top array element and select "Set Loop Element". It is also possible to set the loop element in the Inbox settings. There you can also add the option "recursively", if you not just want to loop through an array, but want to loop through more than just one level of an "array" or even "dictionary" object.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Payload:")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"payload",src:o(13385).Z,width:"1337",height:"712"})),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},'right click on "Data" to set loop element')),(0,n.kt)("br",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Inboxsettings:")),(0,n.kt)("p",null,"Set the Loop in the Inbox settings or in the payload."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"loop",src:o(74430).Z,width:"1269",height:"785"})),(0,n.kt)("p",null,"Now the incoming message will be treated in three singular steps.\nYou may notice that dragging and dropping the Payload items creates a different function than usual. "),(0,n.kt)("p",null,"In a loop:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'=READ(INBOXDATA(,,,"sensor_id"),G8,"String",,TRUE)')),(0,n.kt)("p",null,"No loop:"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'=READ(INBOXDATA(,,"0","sensor_id"),C17,"String",,TRUE)')),(0,n.kt)("p",null,'The loop function is not fixed upon the "0" element and reads the payload information for every loop step. This way, one READ() function covers all loop steps.'),(0,n.kt)("iframe",{title:"vimeo-player",src:"https://player.vimeo.com/video/759921367?h=83ffe23ca4",width:"640",height:"440",frameborder:"0",allowfullscreen:!0}))}b.isMDXComponent=!0},13385:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/PayloadLoop-89397b4523a112bb7a27dff62897ff33.png"},74430:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/loop-a13175c35dcb46d0e5bc8f99f2c75cde.png"}}]);