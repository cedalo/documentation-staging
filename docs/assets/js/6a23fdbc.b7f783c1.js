"use strict";(self.webpackChunkstreamsheets=self.webpackChunkstreamsheets||[]).push([[92475],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||s;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90123:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>d,default:()=>b,frontMatter:()=>m,metadata:()=>f,toc:()=>y});var a=r(3905),n=Object.defineProperty,s=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&p(e,r,t[r]);if(i)for(var r of i(t))c.call(t,r)&&p(e,r,t[r]);return e};const m={id:"streams-index",title:"Overview"},d=void 0,f={unversionedId:"advanced-features/streams/streams-index",id:"advanced-features/streams/streams-index",title:"Overview",description:"The stream processing feature allows messages with JSON payloads to be modified",source:"@site/mosquitto/advanced-features/streams/streams-index.md",sourceDirName:"advanced-features/streams",slug:"/advanced-features/streams/streams-index",permalink:"/documentation-staging/mosquitto/next/advanced-features/streams/streams-index",draft:!1,tags:[],version:"current",frontMatter:{id:"streams-index",title:"Overview"},sidebar:"someSidebar",previous:{title:"Proxy Protocol",permalink:"/documentation-staging/mosquitto/next/advanced-features/proxy-protocol"},next:{title:"Setting Up Streams",permalink:"/documentation-staging/mosquitto/next/advanced-features/streams/streams-config"}},g={},y=[],h={toc:y};function b(e){var t,r=e,{components:n}=r,p=((e,t)=>{var r={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&i)for(var a of i(e))t.indexOf(a)<0&&c.call(e,a)&&(r[a]=e[a]);return r})(r,["components"]);return(0,a.kt)("wrapper",(t=u(u({},h),p),s(t,o({components:n,mdxType:"MDXLayout"}))),(0,a.kt)("p",null,"The stream processing feature allows messages with JSON payloads to be modified\nbefore they are republished and/or persisted to disk. This is managed with a\nuser defined query that has similar concepts to a SQL statement."),(0,a.kt)("p",null,"The Cedalo Stream Processing (CSP) plugin allows the creation of topic streams in the\nMosquitto broker. A topic stream receives all messages on a specified topic\nand can then perform the following tasks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Republish messages on a different topic, with optional QoS and retain control"),(0,a.kt)("li",{parentName:"ul"},"Persist messages to disk, with the ability to replay messages in the future"),(0,a.kt)("li",{parentName:"ul"},"Process JSON payload to extract particular data values prior to republishing"),(0,a.kt)("li",{parentName:"ul"},"Apply aggregation functions to data prior to republishing/persisting"),(0,a.kt)("li",{parentName:"ul"},"Select which messages are processed/persisted based on data values in the payload")),(0,a.kt)("p",null,"Depending on your deployment, the streams feature might need to be configured. Visit ",(0,a.kt)("a",u({parentName:"p"},{href:"/documentation-staging/mosquitto/next/advanced-features/streams/streams-config"}),"Setting up Streams"),"\nfor more information on that."),(0,a.kt)("p",null,"Essential for a stream definition is the Stream Query. It defines, how a stream is processing a topic.\nThe syntax for the Stream Query is described in ",(0,a.kt)("a",u({parentName:"p"},{href:"/documentation-staging/mosquitto/next/advanced-features/streams/streams-select-syntax"}),"Select Query Syntax"),". This section describes\nthe JSON-Format for a query to execute the tasks listed above."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",u({parentName:"p"},{href:"/documentation-staging/mosquitto/next/advanced-features/streams/streams-web-ui"}),"Streams Web Client")," describes, how you manage Streams within the Cedalo MQTT Platform Web Client."),(0,a.kt)("p",null,"In Addition, you can modify streams by using the MQTT API or REST API. Please visit the API Section for more infos."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/documentation-staging/mosquitto/next/api/mqttapis/streams"}),"MQTT Streams API")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",u({parentName:"li"},{href:"/documentation-staging/mosquitto/next/api/restapis/restapi-streams"}),"REST Streams API"))))}b.isMDXComponent=!0}}]);